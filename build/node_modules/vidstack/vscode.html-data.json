{
  "version": 1.1,
  "tags": [
    {
      "name": "media-announcer",
      "attributes": [
        {
          "name": "translations",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/announcer"
        }
      ]
    },
    {
      "name": "media-airplay-button",
      "description": "A button for requesting remote playback via Apple AirPlay.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.apple.com/au/airplay"
        },
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/airplay-button"
        }
      ]
    },
    {
      "name": "media-caption-button",
      "description": "A button for toggling the showing state of the captions.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/caption-button"
        }
      ]
    },
    {
      "name": "media-fullscreen-button",
      "description": "A button for toggling the fullscreen mode of the player.",
      "attributes": [
        {
          "name": "target",
          "description": "The target element on which to request fullscreen on. The target can be `media`\n(i.e., `<media-player>`) or `provider`. The `prefer-media` option will first see if the native\nfullscreen API is available, if not it'll try the media provider.",
          "values": [
            {
              "name": "prefer-media"
            },
            {
              "name": "media"
            },
            {
              "name": "provider"
            }
          ],
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/fullscreen-button"
        },
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/api/fullscreen"
        }
      ]
    },
    {
      "name": "media-google-cast-button",
      "description": "A button for requesting remote playback via Google Cast.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://developers.google.com/cast/docs/overview"
        },
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/google-cast-button"
        }
      ]
    },
    {
      "name": "media-live-button",
      "description": "This component displays the current live status of the stream. This includes whether it's\nlive, at the live edge, or not live. In addition, when this button is pressed it will skip\nahead to the live edge.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive). This will prevent seeking to the\nlive edge when pressed.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/live-button"
        }
      ]
    },
    {
      "name": "media-mute-button",
      "description": "A button for toggling the muted state of the player.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/mute-button"
        }
      ]
    },
    {
      "name": "media-pip-button",
      "description": "A button for toggling the picture-in-picture (PIP) mode of the player.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/pip-button"
        },
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/api/picture-in-picture"
        }
      ]
    },
    {
      "name": "media-play-button",
      "description": "A button for toggling the playback state (play/pause) of the current media.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/play-button"
        }
      ]
    },
    {
      "name": "media-seek-button",
      "description": "A button for seeking the current media playback forwards or backwards by a specified amount.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "seconds",
          "description": "The amount to seek the media playback forwards (positive number) or backwards (negative number)\nwhen the seek button is pressed.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/seek-button"
        }
      ]
    },
    {
      "name": "media-toggle-button",
      "description": "A toggle button is a two-state button that can be either off (not pressed) or on (pressed).",
      "attributes": [
        {
          "name": "default-pressed",
          "description": "Whether it should start in the on (pressed) state.",
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/buttons/toggle-button"
        }
      ]
    },
    {
      "name": "media-captions",
      "description": "Renders and displays captions/subtitles. This will be an overlay for video and a simple\ncaptions box for audio.",
      "attributes": [
        {
          "name": "text-dir",
          "values": [
            {
              "name": "ltr"
            },
            {
              "name": "rtl"
            }
          ],
          "references": []
        },
        {
          "name": "example-text",
          "description": "The text to be displayed when an example caption is being shown.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/captions"
        }
      ]
    },
    {
      "name": "media-chapter-title",
      "attributes": [
        {
          "name": "default-text",
          "description": "Specify text to be displayed when no chapter title is available.",
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-controls",
      "description": "This component creates a container for control groups.",
      "attributes": [
        {
          "name": "hide-delay",
          "description": "The default amount of delay in milliseconds while media playback is progressing without user\nactivity to hide the controls.",
          "references": []
        },
        {
          "name": "hide-on-mouse-leave",
          "description": "Whether controls visibility should be toggled when the mouse enters and leaves the player\ncontainer.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/controls"
        }
      ]
    },
    {
      "name": "media-controls-group",
      "description": "This component creates a container for media controls.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/controls#group"
        }
      ]
    },
    {
      "name": "media-gesture",
      "description": "This component enables actions to be performed on the media based on user gestures.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether this gesture should not be triggered.",
          "references": []
        },
        {
          "name": "event",
          "description": "The DOM event type that will trigger this gesture. It can be any valid DOM event type. Any\nevent can be prefixed with `dbl` to ensure it occurs twice in succession (max 200ms gap).",
          "values": [
            {
              "name": "keyof HTMLElementEventMap"
            },
            {
              "name": "dblended"
            },
            {
              "name": "dblerror"
            },
            {
              "name": "dblplaying"
            },
            {
              "name": "dblseeking"
            },
            {
              "name": "dblwaiting"
            },
            {
              "name": "dblplay"
            },
            {
              "name": "dblprogress"
            },
            {
              "name": "dblmedia-player-connect"
            },
            {
              "name": "dblfind-media-player"
            },
            {
              "name": "dblfullscreenchange"
            },
            {
              "name": "dblfullscreenerror"
            },
            {
              "name": "dblabort"
            },
            {
              "name": "dblanimationcancel"
            },
            {
              "name": "dblanimationend"
            },
            {
              "name": "dblanimationiteration"
            },
            {
              "name": "dblanimationstart"
            },
            {
              "name": "dblauxclick"
            },
            {
              "name": "dblbeforeinput"
            },
            {
              "name": "dblbeforetoggle"
            },
            {
              "name": "dblblur"
            },
            {
              "name": "dblcancel"
            },
            {
              "name": "dblcanplay"
            },
            {
              "name": "dblcanplaythrough"
            },
            {
              "name": "dblchange"
            },
            {
              "name": "dblclose"
            },
            {
              "name": "dblcompositionend"
            },
            {
              "name": "dblcompositionstart"
            },
            {
              "name": "dblcompositionupdate"
            },
            {
              "name": "dblcontextlost"
            },
            {
              "name": "dblcontextmenu"
            },
            {
              "name": "dblcontextrestored"
            },
            {
              "name": "dblcopy"
            },
            {
              "name": "dblcuechange"
            },
            {
              "name": "dblcut"
            },
            {
              "name": "dbldblclick"
            },
            {
              "name": "dbldrag"
            },
            {
              "name": "dbldragend"
            },
            {
              "name": "dbldragenter"
            },
            {
              "name": "dbldragleave"
            },
            {
              "name": "dbldragover"
            },
            {
              "name": "dbldragstart"
            },
            {
              "name": "dbldrop"
            },
            {
              "name": "dbldurationchange"
            },
            {
              "name": "dblemptied"
            },
            {
              "name": "dblfocus"
            },
            {
              "name": "dblfocusin"
            },
            {
              "name": "dblfocusout"
            },
            {
              "name": "dblformdata"
            },
            {
              "name": "dblgotpointercapture"
            },
            {
              "name": "dblinput"
            },
            {
              "name": "dblinvalid"
            },
            {
              "name": "dblkeydown"
            },
            {
              "name": "dblkeypress"
            },
            {
              "name": "dblkeyup"
            },
            {
              "name": "dblload"
            },
            {
              "name": "dblloadeddata"
            },
            {
              "name": "dblloadedmetadata"
            },
            {
              "name": "dblloadstart"
            },
            {
              "name": "dbllostpointercapture"
            },
            {
              "name": "dblmousedown"
            },
            {
              "name": "dblmouseenter"
            },
            {
              "name": "dblmouseleave"
            },
            {
              "name": "dblmousemove"
            },
            {
              "name": "dblmouseout"
            },
            {
              "name": "dblmouseover"
            },
            {
              "name": "dblmouseup"
            },
            {
              "name": "dblpaste"
            },
            {
              "name": "dblpause"
            },
            {
              "name": "dblpointercancel"
            },
            {
              "name": "dblpointerdown"
            },
            {
              "name": "dblpointerenter"
            },
            {
              "name": "dblpointerleave"
            },
            {
              "name": "dblpointermove"
            },
            {
              "name": "dblpointerout"
            },
            {
              "name": "dblpointerover"
            },
            {
              "name": "dblpointerup"
            },
            {
              "name": "dblratechange"
            },
            {
              "name": "dblreset"
            },
            {
              "name": "dblresize"
            },
            {
              "name": "dblscroll"
            },
            {
              "name": "dblscrollend"
            },
            {
              "name": "dblsecuritypolicyviolation"
            },
            {
              "name": "dblseeked"
            },
            {
              "name": "dblselect"
            },
            {
              "name": "dblselectionchange"
            },
            {
              "name": "dblselectstart"
            },
            {
              "name": "dblslotchange"
            },
            {
              "name": "dblstalled"
            },
            {
              "name": "dblsubmit"
            },
            {
              "name": "dblsuspend"
            },
            {
              "name": "dbltimeupdate"
            },
            {
              "name": "dbltoggle"
            },
            {
              "name": "dbltouchcancel"
            },
            {
              "name": "dbltouchend"
            },
            {
              "name": "dbltouchmove"
            },
            {
              "name": "dbltouchstart"
            },
            {
              "name": "dbltransitioncancel"
            },
            {
              "name": "dbltransitionend"
            },
            {
              "name": "dbltransitionrun"
            },
            {
              "name": "dbltransitionstart"
            },
            {
              "name": "dblvolumechange"
            },
            {
              "name": "dblwebkitanimationend"
            },
            {
              "name": "dblwebkitanimationiteration"
            },
            {
              "name": "dblwebkitanimationstart"
            },
            {
              "name": "dblwebkittransitionend"
            },
            {
              "name": "dblwheel"
            },
            {
              "name": "dblbeforeunload"
            },
            {
              "name": "dblpageshow"
            },
            {
              "name": "dblpagehide"
            },
            {
              "name": "dblvisibilitychange"
            },
            {
              "name": "dblenterpictureinpicture"
            },
            {
              "name": "dblleavepictureinpicture"
            },
            {
              "name": "dblwebkitpresentationmodechanged"
            },
            {
              "name": "dblvds-log"
            }
          ],
          "references": []
        },
        {
          "name": "action",
          "description": "An action describes the type of media request event that will be dispatched, which will\nultimately perform some operation on the player.",
          "values": [
            {
              "name": "play"
            },
            {
              "name": "pause"
            },
            {
              "name": "toggle:controls"
            },
            {
              "name": "toggle:fullscreen"
            },
            {
              "name": "toggle:muted"
            },
            {
              "name": "toggle:paused"
            }
          ],
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/gesture"
        }
      ]
    },
    {
      "name": "media-audio-layout",
      "description": "The audio layout is our production-ready UI that's displayed when the media view type is set to\n'audio'. It includes support for audio tracks, slider chapters, captions, live streams, and much\nmore out of the box.",
      "attributes": [
        {
          "name": "when",
          "description": "Determines when the UI should be displayed.",
          "values": [
            {
              "name": "MediaPlayerQuery"
            }
          ],
          "references": []
        },
        {
          "name": "small-when",
          "description": "Determines when the small (e.g., mobile) UI should be displayed.",
          "values": [
            {
              "name": "MediaPlayerQuery"
            }
          ],
          "references": []
        },
        {
          "name": "thumbnails",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/wc/player/core-concepts/loading#thumbnails"
            }
          ]
        },
        {
          "name": "color-scheme",
          "description": "Whether light or dark color theme should be active. Defaults to user operating system\npreference.",
          "values": [
            {
              "name": "light"
            },
            {
              "name": "dark"
            },
            {
              "name": "system"
            },
            {
              "name": "default"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme"
            }
          ]
        },
        {
          "name": "download",
          "description": "Sets the download URL and filename for the download button.",
          "values": [],
          "references": []
        },
        {
          "name": "custom-icons",
          "description": "Whether the default icons should _not_ be loaded. Set this to `true` when providing your own\nicons.",
          "references": []
        },
        {
          "name": "translations",
          "description": "Translation map from english to your desired language for words used throughout the layout.",
          "references": []
        },
        {
          "name": "menu-container",
          "description": "A document query selector string or `HTMLElement` to mount the menu container inside. Defaults\nto `document.body` when set to `null`.",
          "values": [
            {
              "name": "HTMLElement"
            }
          ],
          "references": []
        },
        {
          "name": "menu-group",
          "description": "Specifies whether menu buttons should be placed in the top or bottom controls group. This\nonly applies to the large video layout.",
          "values": [
            {
              "name": "top"
            },
            {
              "name": "bottom"
            }
          ],
          "references": []
        },
        {
          "name": "no-audio-gain",
          "description": "Disable audio boost slider in the settings menu.",
          "references": []
        },
        {
          "name": "no-modal",
          "description": "Whether modal menus should be disabled when the small layout is active. A modal menu is\na floating panel that floats up from the bottom of the screen (outside of the player). It's\nenabled by default as it provides a better user experience for touch devices.",
          "references": []
        },
        {
          "name": "no-scrub-gesture",
          "description": "Whether to disable scrubbing by touch swiping left or right on the player canvas.",
          "references": []
        },
        {
          "name": "slider-chapters-min-width",
          "description": "The minimum width of the slider to start displaying slider chapters when available.",
          "references": []
        },
        {
          "name": "disable-time-slider",
          "description": "Whether the time slider should be disabled.",
          "references": []
        },
        {
          "name": "no-gestures",
          "description": "Whether all gestures such as press to play or seek should not be active.",
          "references": []
        },
        {
          "name": "no-keyboard-animations",
          "description": "Whether keyboard actions should not be displayed.",
          "references": []
        },
        {
          "name": "hide-quality-bitrate",
          "description": "Whether the bitrate should be hidden in the settings quality hint.",
          "references": []
        },
        {
          "name": "playback-rates",
          "description": "The playback rate options to be displayed in the settings menu.",
          "values": [],
          "references": []
        },
        {
          "name": "audio-gains",
          "description": "The audio gain options to be displayed in the settings menu.",
          "values": [],
          "references": []
        },
        {
          "name": "seek-step",
          "description": "The number of seconds to seek forward or backward when pressing the seek button or using\nkeyboard shortcuts.",
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-video-layout",
      "description": "The video layout is our production-ready UI that's displayed when the media view type is set to\n'video'. It includes support for picture-in-picture, fullscreen, slider chapters, slider\npreviews, captions, audio/quality settings, live streams, and much more out of the box.",
      "attributes": [
        {
          "name": "when",
          "description": "Determines when the UI should be displayed.",
          "values": [
            {
              "name": "MediaPlayerQuery"
            }
          ],
          "references": []
        },
        {
          "name": "small-when",
          "description": "Determines when the small (e.g., mobile) UI should be displayed.",
          "values": [
            {
              "name": "MediaPlayerQuery"
            }
          ],
          "references": []
        },
        {
          "name": "thumbnails",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/wc/player/core-concepts/loading#thumbnails"
            }
          ]
        },
        {
          "name": "color-scheme",
          "description": "Whether light or dark color theme should be active. Defaults to user operating system\npreference.",
          "values": [
            {
              "name": "light"
            },
            {
              "name": "dark"
            },
            {
              "name": "system"
            },
            {
              "name": "default"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme"
            }
          ]
        },
        {
          "name": "download",
          "description": "Sets the download URL and filename for the download button.",
          "values": [],
          "references": []
        },
        {
          "name": "custom-icons",
          "description": "Whether the default icons should _not_ be loaded. Set this to `true` when providing your own\nicons.",
          "references": []
        },
        {
          "name": "translations",
          "description": "Translation map from english to your desired language for words used throughout the layout.",
          "references": []
        },
        {
          "name": "menu-container",
          "description": "A document query selector string or `HTMLElement` to mount the menu container inside. Defaults\nto `document.body` when set to `null`.",
          "values": [
            {
              "name": "HTMLElement"
            }
          ],
          "references": []
        },
        {
          "name": "menu-group",
          "description": "Specifies whether menu buttons should be placed in the top or bottom controls group. This\nonly applies to the large video layout.",
          "values": [
            {
              "name": "top"
            },
            {
              "name": "bottom"
            }
          ],
          "references": []
        },
        {
          "name": "no-audio-gain",
          "description": "Disable audio boost slider in the settings menu.",
          "references": []
        },
        {
          "name": "no-modal",
          "description": "Whether modal menus should be disabled when the small layout is active. A modal menu is\na floating panel that floats up from the bottom of the screen (outside of the player). It's\nenabled by default as it provides a better user experience for touch devices.",
          "references": []
        },
        {
          "name": "no-scrub-gesture",
          "description": "Whether to disable scrubbing by touch swiping left or right on the player canvas.",
          "references": []
        },
        {
          "name": "slider-chapters-min-width",
          "description": "The minimum width of the slider to start displaying slider chapters when available.",
          "references": []
        },
        {
          "name": "disable-time-slider",
          "description": "Whether the time slider should be disabled.",
          "references": []
        },
        {
          "name": "no-gestures",
          "description": "Whether all gestures such as press to play or seek should not be active.",
          "references": []
        },
        {
          "name": "no-keyboard-animations",
          "description": "Whether keyboard actions should not be displayed.",
          "references": []
        },
        {
          "name": "hide-quality-bitrate",
          "description": "Whether the bitrate should be hidden in the settings quality hint.",
          "references": []
        },
        {
          "name": "playback-rates",
          "description": "The playback rate options to be displayed in the settings menu.",
          "values": [],
          "references": []
        },
        {
          "name": "audio-gains",
          "description": "The audio gain options to be displayed in the settings menu.",
          "values": [],
          "references": []
        },
        {
          "name": "seek-step",
          "description": "The number of seconds to seek forward or backward when pressing the seek button or using\nkeyboard shortcuts.",
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-layout",
      "attributes": [
        {
          "name": "when",
          "values": [
            {
              "name": "MediaPlayerQuery"
            }
          ],
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-plyr-layout",
      "attributes": [
        {
          "name": "click-to-play",
          "description": "Press the video container to toggle play/pause.",
          "references": []
        },
        {
          "name": "click-to-fullscreen",
          "description": "Double-press the video container to toggle fullscreen.",
          "references": []
        },
        {
          "name": "controls",
          "description": "The controls to be included in the layout and their order specified by the position in the\narray.",
          "references": []
        },
        {
          "name": "custom-icons",
          "description": "Whether the default icons should _not_ be loaded. Set this to `true` when providing your own\nicons.",
          "references": []
        },
        {
          "name": "display-duration",
          "description": "Whether the duration should be displayed. This is ignored if `toggleTime` is `true`.",
          "references": []
        },
        {
          "name": "download",
          "description": "Sets the download URL and filename for the download button. The download button must be\nincluded in the `controls` prop for this to take effect.",
          "values": [],
          "references": []
        },
        {
          "name": "markers",
          "description": "Points on the time slider which should be visually marked for the user.",
          "references": []
        },
        {
          "name": "invert-time",
          "description": "Display the current time as a countdown rather than an incremental counter.",
          "references": []
        },
        {
          "name": "thumbnails",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/wc/player/core-concepts/loading#thumbnails"
            }
          ]
        },
        {
          "name": "toggle-time",
          "description": "Allow users to press to toggle the inverted time.",
          "references": []
        },
        {
          "name": "translations",
          "description": "Translation map from english to your desired language for words used throughout the layout.",
          "references": []
        },
        {
          "name": "seek-time",
          "description": "The time, in seconds, to seek when a user hits fast forward or rewind.",
          "references": []
        },
        {
          "name": "speed",
          "description": "The speed options to display in the UI.",
          "values": [],
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-audio-gain-radio-group",
      "description": "This component manages audio gain radios.",
      "attributes": [
        {
          "name": "gains",
          "description": "The audio gain options to be displayed.",
          "references": []
        },
        {
          "name": "normal-label",
          "description": "The text to display for disabled audio gain (i.e., audio gain is 1.0).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/audio-gain-radio-group"
        }
      ]
    },
    {
      "name": "media-audio-radio-group",
      "description": "This component manages audio track radios.",
      "attributes": [
        {
          "name": "empty-label",
          "description": "The text to display when the are no audio tracks.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/audio-radio-group"
        }
      ]
    },
    {
      "name": "media-captions-radio-group",
      "description": "This component manages caption/subtitle track radio options.",
      "attributes": [
        {
          "name": "off-label",
          "description": "The text to display when the captions are turned off.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/captions-radio-group"
        }
      ]
    },
    {
      "name": "media-chapters-radio-group",
      "description": "This component manages media chapters inside of a radio group.",
      "attributes": [
        {
          "name": "thumbnails",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/player/core-concepts/loading#thumbnails"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/chapters-radio-group"
        }
      ]
    },
    {
      "name": "media-menu-button",
      "description": "A button that controls the opening and closing of a menu component. The button will become a\nmenuitem when used inside a submenu.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/menu"
        }
      ]
    },
    {
      "name": "media-menu",
      "description": "Root menu container used to hold and manage a menu button and menu items. This component is\nused to display options in a floating panel. They can be nested to create submenus.",
      "attributes": [
        {
          "name": "show-delay",
          "description": "The amount of time in milliseconds to wait before showing the menu.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/menu"
        }
      ]
    },
    {
      "name": "media-menu-item",
      "description": "Represents a specific option or action, typically displayed as a text label or icon, which\nusers can select to access or perform a particular function or view related content.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the button should be disabled (non-interactive).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/menu"
        }
      ]
    },
    {
      "name": "media-menu-items",
      "description": "Menu items can be used to display settings or arbitrary content in a floating panel.",
      "attributes": [
        {
          "name": "placement",
          "description": "A space-separated list which specifies the side and alignment of the menu relative\nto the menu button.",
          "values": [
            {
              "name": "MenuPlacementSide"
            },
            {
              "name": "top start"
            },
            {
              "name": "top center"
            },
            {
              "name": "top end"
            },
            {
              "name": "bottom start"
            },
            {
              "name": "bottom center"
            },
            {
              "name": "bottom end"
            },
            {
              "name": "right start"
            },
            {
              "name": "right center"
            },
            {
              "name": "right end"
            },
            {
              "name": "left start"
            },
            {
              "name": "left center"
            },
            {
              "name": "left end"
            }
          ],
          "references": []
        },
        {
          "name": "offset",
          "description": "The distance in pixels between the menu items and the menu button. You can also set\nthe CSS variable `--media-menu-y-offset` to adjust this offset.",
          "references": []
        },
        {
          "name": "align-offset",
          "description": "The offset in pixels from the start/center/end aligned position. You can also set\nthe CSS variable `--media-menu-x-offset` to adjust this offset.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/menu"
        }
      ]
    },
    {
      "name": "media-menu-portal",
      "description": "Portals menu items into the document body.",
      "attributes": [
        {
          "name": "container",
          "description": "Specifies a DOM element or query selector for the container that the menu should be portalled\ninside. Defaults to `document.body` when set to `null`.",
          "values": [
            {
              "name": "HTMLElement"
            }
          ],
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the portal should be disabled. The value can be the string \"fullscreen\" to disable\nportals while media is fullscreen. This is to ensure the menu remains visible.",
          "values": [
            {
              "name": "fullscreen"
            }
          ],
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu#portal"
        }
      ]
    },
    {
      "name": "media-quality-radio-group",
      "description": "This component manages video quality radios.",
      "attributes": [
        {
          "name": "auto-label",
          "description": "The text to display for the auto quality radio option.",
          "references": []
        },
        {
          "name": "hide-bitrate",
          "description": "Whether the bitrate should _not_ be displayed next to each quality radio option.",
          "references": []
        },
        {
          "name": "sort",
          "description": "Specifies how the options should be sorted. The sorting algorithm looks at both the quality\nresolution and bitrate.\n\n- Ascending: 480p, 720p, 720p (higher bitrate), 1080p\n- Descending: 1080p, 720p (higher bitrate), 720p, 480p",
          "values": [
            {
              "name": "descending"
            },
            {
              "name": "ascending"
            }
          ],
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/quality-radio-group"
        }
      ]
    },
    {
      "name": "media-radio",
      "description": "A radio represents a option that a user can select inside of a radio group. Only one radio\ncan be checked in a group.",
      "attributes": [
        {
          "name": "value",
          "description": "The radio value.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/radio"
        }
      ]
    },
    {
      "name": "media-radio-group",
      "description": "A radio group consists of options where only one of them can be checked. Each option is\nprovided as a radio (i.e., a selectable element).",
      "attributes": [
        {
          "name": "value",
          "description": "The value of the radio that is checked in this group.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/menu/radio-group"
        }
      ]
    },
    {
      "name": "media-speed-radio-group",
      "description": "This component manages playback rate radios.",
      "attributes": [
        {
          "name": "rates",
          "description": "The playback rate options to be displayed.",
          "references": []
        },
        {
          "name": "normal-label",
          "description": "The text to display for normal speed (i.e., playback rate of 1).",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/wc/player/components/menu/speed-radio-group"
        }
      ]
    },
    {
      "name": "media-player",
      "description": "All media elements exist inside the `<media-player>` component. This component's main\nresponsibilities are to manage media state updates, dispatch media events, handle media\nrequests, and expose media state through HTML attributes and CSS properties for styling\npurposes.",
      "attributes": [
        {
          "name": "autoplay",
          "references": []
        },
        {
          "name": "crossorigin",
          "values": [
            {
              "name": "true"
            }
          ],
          "references": []
        },
        {
          "name": "crossorigin",
          "description": "Defines how the media element handles cross-origin requests, thereby enabling the\nconfiguration of the CORS requests for the element's fetched data.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "MediaCrossOrigin"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin"
            }
          ]
        },
        {
          "name": "duration",
          "description": "A `double` indicating the total playback length of the media in seconds. If this is not\nprovided it will be determined when the media loaded.",
          "references": []
        },
        {
          "name": "src",
          "description": "The URL and optionally type of the current media resource/s to be considered for playback.",
          "values": [
            {
              "name": "MediaSrc"
            },
            {
              "name": "MediaSrc[]"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://vidstack.io/docs/player/core-concepts/loading#sources"
            }
          ]
        },
        {
          "name": "log-level",
          "description": "The current log level. Values in order of priority are: `silent`, `error`, `warn`, `info`,\nand `debug`.",
          "values": [
            {
              "name": "error"
            },
            {
              "name": "silent"
            },
            {
              "name": "warn"
            },
            {
              "name": "info"
            },
            {
              "name": "debug"
            }
          ],
          "references": []
        },
        {
          "name": "load",
          "description": "Indicates when the provider can begin loading media.\n\n- `eager`: media will be loaded immediately.\n- `idle`: media will be loaded after the page has loaded and `requestIdleCallback` is fired.\n- `visible`: media will delay loading until the provider has entered the viewport.\n- `custom`: media will wait for the `startLoading()` method or `media-start-loading` event.\n- `play`: media will delay loading until there is a play request.",
          "values": [
            {
              "name": "play"
            },
            {
              "name": "visible"
            },
            {
              "name": "eager"
            },
            {
              "name": "idle"
            },
            {
              "name": "custom"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://vidstack.io/docs/player/core-concepts/loading#load-strategies"
            }
          ]
        },
        {
          "name": "poster-load",
          "description": "Indicates when the player can begin loading the poster.\n\n- `eager`: poster will be loaded immediately.\n- `idle`: poster will be loaded after the page has loaded and `requestIdleCallback` is fired.\n- `visible`: poster will delay loading until the provider has entered the viewport.\n- `custom`: poster will wait for the `startLoadingPoster()` method or `media-poster-start-loading` event.",
          "values": [
            {
              "name": "visible"
            },
            {
              "name": "eager"
            },
            {
              "name": "idle"
            },
            {
              "name": "custom"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://vidstack.io/docs/player/core-concepts/loading#load-strategies"
            }
          ]
        },
        {
          "name": "controls-delay",
          "description": "The default amount of delay in milliseconds while media playback is progressing without user\nactivity to indicate an idle state and hide controls.",
          "references": []
        },
        {
          "name": "hide-controls-on-mouse-leave",
          "description": "Whether controls visibility should be toggled when the mouse enters and leaves the player\ncontainer.",
          "references": []
        },
        {
          "name": "fullscreen-orientation",
          "description": "This method will indicate the orientation to lock the screen to when in fullscreen mode and\nthe Screen Orientation API is available.",
          "values": [
            {
              "name": "none"
            },
            {
              "name": "ScreenOrientationLockType"
            }
          ],
          "references": []
        },
        {
          "name": "google-cast",
          "description": "Google Cast options.",
          "references": [
            {
              "name": "Documentation",
              "url": "https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastOptions"
            }
          ]
        },
        {
          "name": "playsinline",
          "references": []
        },
        {
          "name": "prefer-native-hls",
          "description": "Whether native HLS support is preferred over using `hls.js`. We recommend setting this to\n`false` to ensure a consistent and configurable experience across browsers. In addition, our\nlive stream support and DVR detection is much better with `hls.js` so choose accordingly.\n\nThis should generally only be set to `true` if (1) you're working with HLS streams, and (2)\nyou want AirPlay to work via the native Safari controls (i.e., `controls` attribute is\npresent on the `<media-player>` element).",
          "references": []
        },
        {
          "name": "key-disabled",
          "description": "Whether keyboard support is disabled for the media player globally. This property won't disable\nstandard ARIA keyboard controls for individual components when focused.",
          "references": []
        },
        {
          "name": "key-target",
          "description": "The target on which to listen for keyboard events (e.g., `keydown`):\n\n- `document`: the player will listen for events on the entire document. In the case that\nmultiple players are on the page, only the most recently active player will receive input.\n- `player`: the player will listen for events on the player itself or one of its children\nwere recently interacted with.",
          "values": [
            {
              "name": "player"
            },
            {
              "name": "document"
            }
          ],
          "references": []
        },
        {
          "name": "key-shortcuts",
          "description": "Extends global media player keyboard shortcuts. The shortcuts can be specified as a\nspace-separated list of combinations (e.g., `p Control+Space`), array, or callbacks. See the\nprovided doc link for more information.\n\nDo note, if `aria-keyshortcuts` is specified on a component then it will take precedence\nover the respective value set here.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-keyshortcuts"
            }
          ]
        },
        {
          "name": "storage",
          "description": "Determines whether volume, time, and other player settings should be saved to storage\nand used when initializing media. The two options for enabling storage are:\n\n1. You can provide a string which will use our local storage solution and the given string as\na key prefix.\n\n2. Or, you can provide your own storage solution (e.g., database) by implementing\nthe `MediaStorage` interface and providing the object/class.",
          "values": [
            {
              "name": "MediaStorage"
            }
          ],
          "references": []
        },
        {
          "name": "view-type",
          "description": "The type of player view that should be used (i.e., audio or video). By default this is set\nto `video`.",
          "values": [
            {
              "name": "audio"
            },
            {
              "name": "video"
            }
          ],
          "references": []
        },
        {
          "name": "autoplay",
          "description": "Whether playback should automatically begin as soon as enough media is available to do so\nwithout interruption.\n\nSites which automatically play audio (or videos with an audio track) can be an unpleasant\nexperience for users, so it should be avoided when possible. If you must offer auto-play\nfunctionality, you should make it opt-in (requiring a user to specifically enable it).\n\nHowever, auto-play can be useful when creating media elements whose source will be set at a\nlater time, under user control.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/autoplay"
            }
          ]
        },
        {
          "name": "clip-start-time",
          "description": "Limit playback to only play _after_ a certain time. Playback will begin from this time.",
          "references": []
        },
        {
          "name": "clip-end-time",
          "description": "Limit playback to only play _before_ a certain time. Playback will end at this time.",
          "references": []
        },
        {
          "name": "controls",
          "description": "Indicates whether a user interface should be shown for controlling the resource. Set this to\n`false` when you want to provide your own custom controls, and `true` if you want the current\nprovider to supply its own default controls. Depending on the provider, changing this prop\nmay cause the player to completely reset.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/controls"
            }
          ]
        },
        {
          "name": "live-edge-tolerance",
          "description": "The number of seconds that `currentTime` can be behind `liveEdgeStart` and still be considered\nat the edge. The default value is 10, meaning the user can be up to 10 seconds behind the\nlive edge start and still be considered live.",
          "references": []
        },
        {
          "name": "min-live-dvr-window",
          "description": "The minimum seekable length in seconds before seeking operations are permitted on live streams.",
          "references": []
        },
        {
          "name": "muted",
          "description": "Whether the audio is muted or not.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/muted"
            }
          ]
        },
        {
          "name": "paused",
          "description": "Whether playback should be paused. Defaults to `true` if no media has loaded or playback has\nnot started. Setting this to `false` will begin/resume playback.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/paused"
            }
          ]
        },
        {
          "name": "playsinline",
          "description": "Whether the video is to be played \"inline\", that is within the element's playback area. Note\nthat setting this to `false` does not imply that the video will always be played in fullscreen.\nDepending on the provider, changing this prop may cause the player to completely reset.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-playsinline"
            }
          ]
        },
        {
          "name": "playback-rate",
          "description": "Sets the rate at which the media is being played back. This is used to implement user\ncontrols for fast forward, slow motion, and so forth. The normal playback rate is multiplied\nby this value to obtain the current rate, so a value of 1.0 indicates normal speed.\n\nExamples:\n\n- `0.5` = slow down to 50% of the normal speed\n- `1.5` = speed up normal speed by 50%\n- `2` = double the normal speed",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playbackRate"
            }
          ]
        },
        {
          "name": "preload",
          "description": "Configures the preload setting of the underlying media provider once it can load (see\n`loading` property).\n\nThe `preload` attribute provides a hint to the browser about what the author thinks will\nlead to the best user experience with regards to what content is loaded before the video is\nplayed. The recommended default is `metadata`.",
          "values": [
            {
              "name": "none"
            },
            {
              "name": "metadata"
            },
            {
              "name": "auto"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-preload"
            }
          ]
        },
        {
          "name": "stream-type",
          "description": "The current media stream type. This value helps determine what type of UI should be\ndisplayed and whether seeking operations are permitted during live streams. If seeking\nis permitted, set this value to `live:dvr` or `ll-live:dvr`.",
          "values": [
            {
              "name": "live"
            },
            {
              "name": "on-demand"
            },
            {
              "name": "live:dvr"
            },
            {
              "name": "ll-live"
            },
            {
              "name": "ll-live:dvr"
            }
          ],
          "references": []
        },
        {
          "name": "artist",
          "description": "The artist or channel name for which this content belongs to. This can be used in your\nlayout and it will be included in the Media Session API.",
          "references": []
        },
        {
          "name": "artwork",
          "description": "Images to be included in the Media Session API.",
          "references": []
        },
        {
          "name": "volume",
          "description": "An `int` between `0` (silent) and `1` (loudest) indicating the audio volume. Defaults to `1`.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volume"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/player"
        }
      ]
    },
    {
      "name": "media-poster",
      "description": "Loads and displays the current media poster image. By default, the media provider's\nloading strategy is respected meaning the poster won't load until the media can.",
      "attributes": [
        {
          "name": "src",
          "description": "The URL of the poster image resource.",
          "references": []
        },
        {
          "name": "alt",
          "description": "♿ **ARIA:** Provides alternative information for a poster image if a user for some reason\ncannot view it.",
          "references": []
        },
        {
          "name": "crossorigin",
          "description": "Defines how the img handles cross-origin requests, thereby enabling the\nconfiguration of the CORS requests for the element's fetched data.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "MediaCrossOrigin"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/poster"
        }
      ]
    },
    {
      "name": "media-provider",
      "description": "Used to render the current provider.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/media/provider"
        }
      ]
    },
    {
      "name": "media-audio-gain-slider",
      "description": "Versatile and user-friendly audio boost control designed for seamless cross-browser and provider\ncompatibility and accessibility with ARIA support. It offers a smooth user experience for both\nmouse and touch interactions and is highly customizable in terms of styling. Users can\neffortlessly change the audio gain within the range 0 to 100.",
      "attributes": [
        {
          "name": "min",
          "description": "The minimum audio gain boost represented as a percentage.",
          "references": []
        },
        {
          "name": "max",
          "description": "The minimum audio gain boost represented as a percentage.",
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/audio-gain-slider"
        }
      ]
    },
    {
      "name": "media-quality-slider",
      "description": "Versatile and user-friendly input video quality control designed for seamless cross-browser and\nprovider compatibility and accessibility with ARIA support. It offers a smooth user experience\nfor both mouse and touch interactions and is highly customizable in terms of styling.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/quality-slider"
        }
      ]
    },
    {
      "name": "media-slider-chapters",
      "description": "Used to create predefined sections within a time slider interface based on the currently\nactive chapters text track.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether chapters should be disabled.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/slider-chapters"
        }
      ]
    },
    {
      "name": "media-slider",
      "description": "Versatile and user-friendly input control designed for seamless cross-browser compatibility and\naccessibility with ARIA support. It offers a smooth user experience for both mouse and touch\ninteractions and is highly customizable in terms of styling. Users can effortlessly input numeric\nvalues within a specified range, defined by a minimum and maximum value.",
      "attributes": [
        {
          "name": "min",
          "description": "The lowest slider value in the range of permitted values.",
          "references": []
        },
        {
          "name": "max",
          "description": "The greatest slider value in the range of permitted values.",
          "references": []
        },
        {
          "name": "value",
          "description": "The current slider value.",
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/slider"
        }
      ]
    },
    {
      "name": "media-slider-preview",
      "description": "Used to provide users with a real-time or interactive preview of the value or selection they\nare making as they move the slider thumb. This can include displaying the current pointer\nvalue numerically, or displaying a thumbnail over the time slider.",
      "attributes": [
        {
          "name": "offset",
          "description": "The distance in pixels between the preview and the slider. You can also set\nthe CSS variable `--media-slider-preview-offset` to adjust this offset.",
          "references": []
        },
        {
          "name": "no-clamp",
          "description": "By default, the preview will be clamped to the left and right of the slider track. If this\nis set to `true`, the preview will flow outside of the container when at the edges.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/slider#preview"
        }
      ]
    },
    {
      "name": "media-slider-steps",
      "attributes": [],
      "references": []
    },
    {
      "name": "media-slider-thumbnail",
      "description": "Used to load and display a preview thumbnail at the given `time`.",
      "attributes": [
        {
          "name": "src",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/player/core-concepts/loading#thumbnails"
            }
          ]
        },
        {
          "name": "time",
          "description": "Finds, loads, and displays the first active thumbnail cue that's start/end times are in range.",
          "references": []
        },
        {
          "name": "cross-origin",
          "description": "Defines how the media handles cross-origin requests, thereby enabling the\nconfiguration of the CORS requests for the element's fetched data.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "MediaCrossOrigin"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/thumbnail"
        }
      ]
    },
    {
      "name": "media-slider-value",
      "description": "Displays the specific numeric representation of the current or pointer value of the slider.\nWhen a user interacts with a slider by moving its thumb along the track, the slider value\nchanges accordingly.",
      "attributes": [
        {
          "name": "type",
          "description": "Whether to use the slider's current value, or pointer value.",
          "values": [
            {
              "name": "pointer"
            },
            {
              "name": "current"
            }
          ],
          "references": []
        },
        {
          "name": "format",
          "description": "Determines how the value is formatted. By default it will use the most appropriate formatting,\nfor the time slider that's time, and for volume percent.",
          "values": [
            {
              "name": "value"
            },
            {
              "name": "percent"
            },
            {
              "name": "time"
            }
          ],
          "references": []
        },
        {
          "name": "show-hours",
          "description": "Whether the time should always show the hours unit, even if the time is less than\n1 hour. Only available if the `format` prop is set to `time`.",
          "references": []
        },
        {
          "name": "show-ms",
          "description": "Whether the time should display milliseconds. Only available if the `format` prop is set to\n`time`.",
          "references": []
        },
        {
          "name": "pad-hours",
          "description": "Whether the hours unit should be padded with zeroes to a length of 2. Only available if\nthe `format` prop is set to `time`.",
          "references": []
        },
        {
          "name": "pad-minutes",
          "description": "Whether the minutes unit should be padded with zeroes to a length of 2. Setting this to `null`\nwill pad minutes when hours is >=1. Only available if the `format` prop is set to `time`.",
          "references": []
        },
        {
          "name": "decimal-places",
          "description": "Round the value when formatted as a percentage to the given number of decimal places. Only\navailable if `format` prop is `percent`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/slider-value"
        }
      ]
    },
    {
      "name": "media-slider-video",
      "description": "Used to load a low-resolution video to be displayed when the user is hovering over or dragging\nthe time slider. The preview video will automatically be updated to be in-sync with the current\npreview position, so ensure it has the same length as the original media (i.e., same duration).",
      "attributes": [
        {
          "name": "src",
          "description": "The URL of a media resource to use.",
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/src"
            }
          ]
        },
        {
          "name": "cross-origin",
          "description": "Defines how the media handles cross-origin requests, thereby enabling the\nconfiguration of the CORS requests for the element's fetched data.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "MediaCrossOrigin"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/slider-video"
        }
      ]
    },
    {
      "name": "media-speed-slider",
      "description": "Versatile and user-friendly input playback rate control designed for seamless cross-browser and\nprovider compatibility and accessibility with ARIA support. It offers a smooth user experience\nfor both mouse and touch interactions and is highly customizable in terms of styling.",
      "attributes": [
        {
          "name": "min",
          "description": "The minimum playback rate.",
          "references": []
        },
        {
          "name": "max",
          "description": "The maximum playback rate.",
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/speed-slider"
        }
      ]
    },
    {
      "name": "media-time-slider",
      "description": "Versatile and user-friendly input time control designed for seamless cross-browser and provider\ncompatibility and accessibility with ARIA support. It offers a smooth user experience for both\nmouse and touch interactions and is highly customizable in terms of styling. Users can\neffortlessly change the current playback time within the range 0 to seekable end.",
      "attributes": [
        {
          "name": "pause-while-dragging",
          "description": "Whether it should request playback to pause while the user is dragging the\nthumb. If the media was playing before the dragging starts, the state will be restored by\ndispatching a user play request once the dragging ends.",
          "references": []
        },
        {
          "name": "seeking-request-throttle",
          "description": "The amount of milliseconds to throttle media seeking request events being dispatched.",
          "references": []
        },
        {
          "name": "no-swipe-gesture",
          "description": "Whether touch swiping left or right on the player canvas should activate the time slider. This\ngesture makes it easier for touch users to drag anywhere on the player left or right to\nseek backwards or forwards, without directly interacting with time slider.",
          "references": []
        },
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/time-slider"
        }
      ]
    },
    {
      "name": "media-volume-slider",
      "description": "Versatile and user-friendly input volume control designed for seamless cross-browser and provider\ncompatibility and accessibility with ARIA support. It offers a smooth user experience for both\nmouse and touch interactions and is highly customizable in terms of styling. Users can\neffortlessly change the volume level within the range 0 (muted) to 100.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the slider should be disabled (non-interactive).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the slider is not visible and stops all events and expensive updates to\nbe more power efficient.",
          "references": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [
            {
              "name": "horizontal"
            },
            {
              "name": "vertical"
            }
          ],
          "references": []
        },
        {
          "name": "step",
          "description": "A number that specifies the granularity that the slider value must adhere to.\n\nA step is an abstract unit that may carry a different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "key-step",
          "description": "♿ **ARIA:** A number that specifies the number of steps taken when interacting with\nthe slider via keyboard.\n\nA step is an abstract unit that may carry different type of measure depending on the type of\nslider. For example, for the volume slider each step is 1% of volume, and for the time slider\nit is 1 second which is a varying percentage depending on the media duration.",
          "references": []
        },
        {
          "name": "shift-key-multiplier",
          "description": "♿ **ARIA:** A number that will be used to multiply the `keyStep` when the `Shift` key\nis held down and the slider value is changed by pressing `LeftArrow` or `RightArrow`. Think\nof it as `keyStep * shiftKeyMultiplier`.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/sliders/volume-slider"
        }
      ]
    },
    {
      "name": "media-spinner",
      "attributes": [
        {
          "name": "size",
          "description": "The horizontal (width) and vertical (height) length of the spinner.",
          "references": []
        },
        {
          "name": "track-width",
          "description": "The width of the spinner track and track fill.",
          "references": []
        },
        {
          "name": "fill-percent",
          "description": "The percentage of the spinner track that should be filled.",
          "references": []
        }
      ],
      "references": []
    },
    {
      "name": "media-thumbnail",
      "description": "Used to load and display a preview thumbnail at the given `time`.",
      "attributes": [
        {
          "name": "src",
          "description": "The thumbnails resource.",
          "values": [
            {
              "name": "ThumbnailImageInit[]"
            },
            {
              "name": "ThumbnailStoryboard"
            },
            {
              "name": "MuxThumbnailStoryboard"
            }
          ],
          "references": [
            {
              "name": "Documentation",
              "url": "https://www.vidstack.io/docs/player/core-concepts/loading#thumbnails"
            }
          ]
        },
        {
          "name": "time",
          "description": "Finds, loads, and displays the first active thumbnail cue that's start/end times are in range.",
          "references": []
        },
        {
          "name": "crossorigin",
          "description": "Defines how the media handles cross-origin requests, thereby enabling the\nconfiguration of the CORS requests for the element's fetched data.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "MediaCrossOrigin"
            }
          ],
          "references": [
            {
              "name": "MDN",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin"
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/thumbnail"
        }
      ]
    },
    {
      "name": "media-time",
      "description": "Outputs a media duration (eg: `currentTime`, `duration`, `bufferedAmount`, etc.) value as time\nformatted text.",
      "attributes": [
        {
          "name": "type",
          "description": "The type of media time to track.",
          "values": [
            {
              "name": "buffered"
            },
            {
              "name": "duration"
            },
            {
              "name": "current"
            }
          ],
          "references": []
        },
        {
          "name": "show-hours",
          "description": "Whether the time should always show the hours unit, even if the time is less than\n1 hour.",
          "references": []
        },
        {
          "name": "pad-hours",
          "description": "Whether the hours unit should be padded with zeroes to a length of 2.",
          "references": []
        },
        {
          "name": "pad-minutes",
          "description": "Whether the minutes unit should be padded with zeroes to a length of 2.",
          "references": []
        },
        {
          "name": "remainder",
          "description": "Whether to display the remaining time from the current type, until the duration is reached.",
          "references": []
        },
        {
          "name": "toggle",
          "description": "Whether on press the time should invert showing the remaining time (i.e., toggle the\n`remainder` prop).",
          "references": []
        },
        {
          "name": "hidden",
          "description": "Provides a hint that the time is not visible and stops all events and updates to be more\npower efficient.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/time"
        }
      ]
    },
    {
      "name": "media-title",
      "attributes": [],
      "references": []
    },
    {
      "name": "media-tooltip-content",
      "description": "This component contains the content that is visible when the tooltip trigger is interacted with.",
      "attributes": [
        {
          "name": "placement",
          "description": "A space-separated list which specifies the side and alignment of the tooltip content relative\nto the trigger.",
          "values": [
            {
              "name": "top start"
            },
            {
              "name": "top center"
            },
            {
              "name": "top end"
            },
            {
              "name": "bottom start"
            },
            {
              "name": "bottom center"
            },
            {
              "name": "bottom end"
            },
            {
              "name": "right start"
            },
            {
              "name": "right center"
            },
            {
              "name": "right end"
            },
            {
              "name": "left start"
            },
            {
              "name": "left center"
            },
            {
              "name": "left end"
            },
            {
              "name": "TooltipPlacementSide"
            }
          ],
          "references": []
        },
        {
          "name": "offset",
          "description": "The distance in pixels between the content and the tooltip trigger. You can also set\nthe CSS variable `--media-tooltip-y-offset` to adjust this offset.",
          "references": []
        },
        {
          "name": "align-offset",
          "description": "The offset in pixels from the start/center/end aligned position. You can also set\nthe CSS variable `--media-tooltip-x-offset` to adjust this offset.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/tooltip"
        }
      ]
    },
    {
      "name": "media-tooltip",
      "description": "A contextual text bubble that displays a description for an element that appears on pointer\nhover or keyboard focus.",
      "attributes": [
        {
          "name": "show-delay",
          "description": "The amount of time in milliseconds to wait before showing a tooltip.",
          "references": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/tooltip"
        },
        {
          "name": "MDN",
          "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tooltip_role"
        }
      ]
    },
    {
      "name": "media-tooltip-trigger",
      "description": "Wraps the element that will trigger showing/hiding the tooltip on hover or keyboard focus. The\ntooltip content is positioned relative to this element.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/tooltip"
        }
      ]
    },
    {
      "name": "media-icon",
      "description": "This component dynamically loads and renders media icons. See our [media icons catalog](https://www.vidstack.io/media-icons) to preview them all. Do note, the icon `type` can be dynamically changed.",
      "attributes": [
        {
          "name": "type",
          "values": [
            {
              "name": "accessibility",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=accessibility"
                }
              ]
            },
            {
              "name": "add-note",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=add-note"
                }
              ]
            },
            {
              "name": "add-playlist",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=add-playlist"
                }
              ]
            },
            {
              "name": "add-user",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=add-user"
                }
              ]
            },
            {
              "name": "add",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=add"
                }
              ]
            },
            {
              "name": "airplay",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=airplay"
                }
              ]
            },
            {
              "name": "arrow-collapse-in",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-collapse-in"
                }
              ]
            },
            {
              "name": "arrow-collapse",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-collapse"
                }
              ]
            },
            {
              "name": "arrow-down",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-down"
                }
              ]
            },
            {
              "name": "arrow-expand-out",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-expand-out"
                }
              ]
            },
            {
              "name": "arrow-expand",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-expand"
                }
              ]
            },
            {
              "name": "arrow-left",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-left"
                }
              ]
            },
            {
              "name": "arrow-right",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-right"
                }
              ]
            },
            {
              "name": "arrow-up",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=arrow-up"
                }
              ]
            },
            {
              "name": "bookmark",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=bookmark"
                }
              ]
            },
            {
              "name": "camera",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=camera"
                }
              ]
            },
            {
              "name": "chapters",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chapters"
                }
              ]
            },
            {
              "name": "chat-collapse",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chat-collapse"
                }
              ]
            },
            {
              "name": "chat",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chat"
                }
              ]
            },
            {
              "name": "check",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=check"
                }
              ]
            },
            {
              "name": "chevron-down",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chevron-down"
                }
              ]
            },
            {
              "name": "chevron-left",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chevron-left"
                }
              ]
            },
            {
              "name": "chevron-right",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chevron-right"
                }
              ]
            },
            {
              "name": "chevron-up",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chevron-up"
                }
              ]
            },
            {
              "name": "chromecast",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=chromecast"
                }
              ]
            },
            {
              "name": "clip",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=clip"
                }
              ]
            },
            {
              "name": "closed-captions-on",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=closed-captions-on"
                }
              ]
            },
            {
              "name": "closed-captions",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=closed-captions"
                }
              ]
            },
            {
              "name": "comment",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=comment"
                }
              ]
            },
            {
              "name": "computer",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=computer"
                }
              ]
            },
            {
              "name": "device",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=device"
                }
              ]
            },
            {
              "name": "download",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=download"
                }
              ]
            },
            {
              "name": "episodes",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=episodes"
                }
              ]
            },
            {
              "name": "eye",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=eye"
                }
              ]
            },
            {
              "name": "fast-backward",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fast-backward"
                }
              ]
            },
            {
              "name": "fast-forward",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fast-forward"
                }
              ]
            },
            {
              "name": "flag",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=flag"
                }
              ]
            },
            {
              "name": "fullscreen-arrow-exit",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fullscreen-arrow-exit"
                }
              ]
            },
            {
              "name": "fullscreen-arrow",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fullscreen-arrow"
                }
              ]
            },
            {
              "name": "fullscreen-exit",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fullscreen-exit"
                }
              ]
            },
            {
              "name": "fullscreen",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=fullscreen"
                }
              ]
            },
            {
              "name": "heart",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=heart"
                }
              ]
            },
            {
              "name": "info",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=info"
                }
              ]
            },
            {
              "name": "language",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=language"
                }
              ]
            },
            {
              "name": "link",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=link"
                }
              ]
            },
            {
              "name": "lock-closed",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=lock-closed"
                }
              ]
            },
            {
              "name": "lock-open",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=lock-open"
                }
              ]
            },
            {
              "name": "menu-horizontal",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=menu-horizontal"
                }
              ]
            },
            {
              "name": "menu-vertical",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=menu-vertical"
                }
              ]
            },
            {
              "name": "microphone",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=microphone"
                }
              ]
            },
            {
              "name": "mobile",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=mobile"
                }
              ]
            },
            {
              "name": "moon",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=moon"
                }
              ]
            },
            {
              "name": "music-off",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=music-off"
                }
              ]
            },
            {
              "name": "music",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=music"
                }
              ]
            },
            {
              "name": "mute",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=mute"
                }
              ]
            },
            {
              "name": "next",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=next"
                }
              ]
            },
            {
              "name": "no-eye",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=no-eye"
                }
              ]
            },
            {
              "name": "notification",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=notification"
                }
              ]
            },
            {
              "name": "odometer",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=odometer"
                }
              ]
            },
            {
              "name": "pause",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=pause"
                }
              ]
            },
            {
              "name": "picture-in-picture-exit",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=picture-in-picture-exit"
                }
              ]
            },
            {
              "name": "picture-in-picture",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=picture-in-picture"
                }
              ]
            },
            {
              "name": "play",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=play"
                }
              ]
            },
            {
              "name": "playback-speed-circle",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=playback-speed-circle"
                }
              ]
            },
            {
              "name": "playlist",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=playlist"
                }
              ]
            },
            {
              "name": "previous",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=previous"
                }
              ]
            },
            {
              "name": "question-mark",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=question-mark"
                }
              ]
            },
            {
              "name": "queue-list",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=queue-list"
                }
              ]
            },
            {
              "name": "radio-button-selected",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=radio-button-selected"
                }
              ]
            },
            {
              "name": "radio-button",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=radio-button"
                }
              ]
            },
            {
              "name": "repeat-on",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=repeat-on"
                }
              ]
            },
            {
              "name": "repeat-square-on",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=repeat-square-on"
                }
              ]
            },
            {
              "name": "repeat-square",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=repeat-square"
                }
              ]
            },
            {
              "name": "repeat",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=repeat"
                }
              ]
            },
            {
              "name": "replay",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=replay"
                }
              ]
            },
            {
              "name": "rotate",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=rotate"
                }
              ]
            },
            {
              "name": "search",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=search"
                }
              ]
            },
            {
              "name": "seek-backward-10",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-backward-10"
                }
              ]
            },
            {
              "name": "seek-backward-15",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-backward-15"
                }
              ]
            },
            {
              "name": "seek-backward-30",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-backward-30"
                }
              ]
            },
            {
              "name": "seek-backward",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-backward"
                }
              ]
            },
            {
              "name": "seek-forward-10",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-forward-10"
                }
              ]
            },
            {
              "name": "seek-forward-15",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-forward-15"
                }
              ]
            },
            {
              "name": "seek-forward-30",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-forward-30"
                }
              ]
            },
            {
              "name": "seek-forward",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=seek-forward"
                }
              ]
            },
            {
              "name": "send",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=send"
                }
              ]
            },
            {
              "name": "settings-menu",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=settings-menu"
                }
              ]
            },
            {
              "name": "settings-switch",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=settings-switch"
                }
              ]
            },
            {
              "name": "settings",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=settings"
                }
              ]
            },
            {
              "name": "share-arrow",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=share-arrow"
                }
              ]
            },
            {
              "name": "share",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=share"
                }
              ]
            },
            {
              "name": "shuffle-on",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=shuffle-on"
                }
              ]
            },
            {
              "name": "shuffle",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=shuffle"
                }
              ]
            },
            {
              "name": "stop",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=stop"
                }
              ]
            },
            {
              "name": "subtitles",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=subtitles"
                }
              ]
            },
            {
              "name": "sun",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=sun"
                }
              ]
            },
            {
              "name": "theatre-mode-exit",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=theatre-mode-exit"
                }
              ]
            },
            {
              "name": "theatre-mode",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=theatre-mode"
                }
              ]
            },
            {
              "name": "thumbs-down",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=thumbs-down"
                }
              ]
            },
            {
              "name": "thumbs-up",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=thumbs-up"
                }
              ]
            },
            {
              "name": "timer",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=timer"
                }
              ]
            },
            {
              "name": "transcript",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=transcript"
                }
              ]
            },
            {
              "name": "tv",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=tv"
                }
              ]
            },
            {
              "name": "user",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=user"
                }
              ]
            },
            {
              "name": "volume-high",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=volume-high"
                }
              ]
            },
            {
              "name": "volume-low",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=volume-low"
                }
              ]
            },
            {
              "name": "x-mark",
              "references": [
                {
                  "name": "Preview Icon",
                  "url": "https://vidstack.io/media-icons?lib=html&icon=x-mark"
                }
              ]
            }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://www.vidstack.io/docs/player/components/display/icons"
        }
      ]
    }
  ]
}